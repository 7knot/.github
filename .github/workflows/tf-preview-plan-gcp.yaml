name: Terraform Preview Plan GCP
on:
  workflow_call:
    inputs:
      workload-identity-provider:
        required: true
        type: string
      service-account:
        required: true
        type: string
      work-dir:
        required: true
        type: string
      workspace-name:
        required: true
        type: string

# refs: https://github.blog/changelog/2021-10-06-github-actions-workflows-triggered-by-dependabot-prs-will-respect-permissions-key-in-workflows/
permissions:
  contents: read
  id-token: write
  pull-requests: write
jobs:
  preview-plan-gcp:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud Platform
      id: auth-gcloud
      uses: google-github-actions/auth@v0
      with:
        create_credentials_file: true
        access_token_lifetime: 900s
        workload_identity_provider: ${{ inputs.workload-identity-provider }}
        service_account: ${{ inputs.service-account }}

    - name: Get terraform version from .tool-versions
      id: get-terraform-version
      run: |
        TF_VERSION=$(cat .tool-versions | awk -F' ' '{ if($1 == "terraform") print $2 }')
        echo ""::set-output name=TF_VERSION::${TF_VERSION}

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ steps.get-terraform-version.outputs.TF_VERSION }}

    - name: Run terraform init
      id: init
      run: terraform init
      working-directory: ${{ inputs.work-dir }}

    - name: Run terraform fmt
      id: fmt
      run: terraform fmt -check
      working-directory: ${{ inputs.work-dir }}

    -
      name: Run terraform validate
      id: validate
      run: terraform validate -no-color
      working-directory: ${{ inputs.work-dir }}

    -
      name: Run terraform plan
      id: plan
      run: terraform plan -out workspace.plan
      working-directory: ${{ inputs.work-dir }}

    -
      name: Comment on PR
      uses: robburger/terraform-pr-commenter@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_IN_AUTOMATION: true
        TF_WORKSPACE: ${{ inputs.workspace-name }}
        EXPAND_SUMMARY_DETAILS: false
      with:
        commenter_type: plan
        commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
        commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
